kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-persistent-storage
  labels:
    type: local
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
   path: "/data/data01"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-persistent-storage-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
     storage: 3Gi
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
          - name: mongo-persistent-storage
            mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
           claimName: mongo-persistent-storage-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
   name: mongo
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
   name: springboot-docker
  name: springboot-docker
spec:
  replicas: 3
  template:
    metadata:
      labels:
        run: springboot-docker
      name: springboot-docker
    spec:
      hostname: springboot-docker
      containers:
        - image: csreedhar20/todoapp:latest
          name: springboot-docker
          ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-docker
  labels:
      run: springboot-docker
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    run: springboot-docker
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: angular-app
  labels:
      run: angular-app
spec:
  ports:
    - port: 8090
      targetPort: 80
  selector:
    run: angular-app
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: angular-app
spec:
  replicas: 1
  template:
    metadata:
      labels:
        run: angular-app
    spec:
      containers:
      - name: angular-app
        image: csreedhar20/angular
        ports:
        - containerPort: 80
        - containerPort: 443
